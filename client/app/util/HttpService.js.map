{"version":3,"sources":["../../app-src/util/HttpService.js"],"names":["HttpService","get","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","JSON","parse","responseText","send"],"mappings":";;;;;;AAAO,kBAAMA,WAAN,CAAkB;AACrBC,oBAAIC,GAAJ,EAAQ;AACJ,2BAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,8BAAMC,MAAM,IAAIC,cAAJ,EAAZ;AACAD,4BAAIE,IAAJ,CAAS,KAAT,EAAgBN,GAAhB;AACAI,4BAAIG,kBAAJ,GAAyB,MAAM;AAC3B,gCAAGH,IAAII,UAAJ,IAAkB,CAArB,EAAuB;AACnB,oCAAGJ,IAAIK,MAAJ,IAAc,GAAjB,EAAqB;AACjBP,4CAAQQ,KAAKC,KAAL,CAAWP,IAAIQ,YAAf,CAAR;AACH,iCAFD,MAEK;AACDT,2CAAOC,IAAIQ,YAAX;AACH;AACJ;AACJ,yBARD;AASAR,4BAAIS,IAAJ;AACH,qBAbM,CAAP;AAcH;AAhBoB","file":"HttpService.js","sourcesContent":["export class HttpService {\n    get(url){\n        return new Promise((resolve, reject) => {\n            const xhr = new XMLHttpRequest();\n            xhr.open('GET', url);\n            xhr.onreadystatechange = () => {\n                if(xhr.readyState == 4){\n                    if(xhr.status == 200){\n                        resolve(JSON.parse(xhr.responseText));\n                    }else{\n                        reject(xhr.responseText);\n                    }\n                }\n            }\n            xhr.send();            \n        });\n    }\n}"]}