{"version":3,"sources":["../../app-src/controllers/NegociacaoController.js"],"names":["Negociacoes","NegociacaoService","Negociacao","NegociacoesView","MensagemView","Mensagem","DateConverter","Bind","getNegociacaoDao","getExceptionMessage","debounce","controller","NegociacaoController","constructor","_inputData","_inputQuantidade","_inputValor","Object","assign","_negociacoes","_mensagem","_service","_init","importaNegociacoes","negociacoes","obterNegociacoesDoPeriodo","filter","paraArray","some","novaNegociacao","equals","negociacaoExistente","forEach","adiciona","negociacao","texto","err","event","preventDefault","_criaNegociacao","dao","_limpaFormulario","value","focus","data","paraData","parseInt","parseFloat","apaga","apagaTodos","esvazia","listaTodos"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { Negociacoes, NegociacaoService, Negociacao } from '../domain/index.js';\nimport { NegociacoesView, MensagemView, Mensagem, DateConverter } from '../ui/index.js';\nimport { Bind, getNegociacaoDao, getExceptionMessage, debounce, controller } from '../util/index.js';\n\n@controller('#data', '#quantidade', '#valor')\nexport class NegociacaoController {\n    constructor(_inputData, _inputQuantidade, _inputValor){\n\n        Object.assign(this, { _inputData, _inputQuantidade, _inputValor });\n\n        this._negociacoes = new Bind(\n            new Negociacoes(), \n            new NegociacoesView('#negociacoes'),\n            'adiciona', 'esvazia'\n        );\n        \n        this._mensagem = new Bind(\n            new Mensagem(),\n            new MensagemView('#mensagemView'),\n            'texto'\n        );    \n\n        this._service = new NegociacaoService();\n        this._init();\n    }\n\n    @debounce()\n    async importaNegociacoes(){\n        try {\n            const negociacoes = await this._service.obterNegociacoesDoPeriodo();\n            negociacoes.filter(novaNegociacao => \n                !this._negociacoes.paraArray()\n                .some(negociacaoExistente => novaNegociacao.equals(negociacaoExistente)))\n                .forEach(negociacao => this._negociacoes.adiciona(negociacao));      \n            this._mensagem.texto = 'Negociações do período importadas com sucesso';                      \n        }\n        catch(err) {\n            this._mensagem.texto = getExceptionMessage(err);\n        }\n    }\n\n    @debounce()\n    async adiciona(event){\n        try {\n            event.preventDefault();\n            const negociacao = this._criaNegociacao();\n            const dao = await getNegociacaoDao();\n            await dao.adiciona(negociacao);\n            this._negociacoes.adiciona(negociacao);\n            this._mensagem.texto = 'Negociação adicionada com sucesso!';\n            this._limpaFormulario();\n        }\n        catch(err){\n            this._mensagem.texto = getExceptionMessage(err);\n        }\n    }\n\n    _limpaFormulario(){\n        this._inputData.value = '';\n        this._inputQuantidade.value = 1;\n        this._inputValor.value = 0.0;\n        this._inputData.focus();\n    }\n\n    _criaNegociacao(){\n        let data = DateConverter.paraData(this._inputData.value);\n        return new Negociacao(\n            data,\n            parseInt(this._inputQuantidade.value),\n            parseFloat(this._inputValor.value)\n        );\n    }\n\n    async apaga(){\n        try {\n            const dao = await getNegociacaoDao();\n            await dao.apagaTodos();\n            this._negociacoes.esvazia();\n            this._mensagem.texto = 'Negociações apagadas com sucesso!';\n        }\n        catch(err) {\n            this._mensagem.texto = getExceptionMessage(err);\n        }\n    }\n\n    async _init(){\n        try {\n            const dao = await getNegociacaoDao();\n            const negociacoes = await dao.listaTodos();\n            negociacoes.forEach(negociacao => this._negociacoes.adiciona(negociacao));\n        } \n        catch(err){\n            this._mensagem.texto = getExceptionMessage(err);\n        }                \n    }\n}"]}